# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zdzPna3HvBg_xGrZjqzxvGRoHpg9F8aO

## Read data from file
"""

import os
import codecs
def readfile(filename):
	#current_path=os.path.abspath(os.curdir)
	file_path=os.path.join("/content/drive/My Drive/SML_P1",filename)
	if not os.path.exists(file_path):
		print("error:file not found:"+filename)
		return ""
	f=codecs.open(file_path,"r","utf-8")
	s=f.read()
	f.close()
	return s
test_data=readfile("test-public.txt")
test_data=test_data.splitlines()
print("length of testing data:"+str(len(test_data)))
train_data=readfile("train.txt")
train_data=train_data.splitlines()
print("length of training data:"+str(len(train_data)))

print(train_data[0:1])
#print(test_data[0:20])

"""## Get sources&sinks"""

from collections import defaultdict
train_dict= {}

for temp_str in train_data:
  temp = temp_str.split('\t')
  train_dict[temp[0]] = set(temp[1:])

print(train_dict['540762'])
print(set(train_dict['540762']))

train_sources = set()
train_sinks = set()

for temp_str in train_data:
  temp=temp_str.split('\t')
  train_sources.add(temp[0])
  for j in range(1,len(temp)):
    temp_list = []
    train_sinks.add(temp[j])
  #print(len(sources))
  #print(len(sinks))

print(len(train_sources))
print(len(train_sinks))

print(train_sources)

"""# Get positive&negative data

## Positive
"""

len(list(train_sources))

import random
positive_list=[]

count =0
for i in range(15000):
  if (count % 1000 == 0):
    print(count)
  count += 1
  x = random.randint(0, 19999)
  random_source = (list(train_sources))[x]
  random_sinks = train_dict[random_source]
  try:
    random_sink = random.choice(list(random_sinks))
    positive_list.append((random_source, random_sink))
  except:
    pass
  if (len(positive_list)==10000):
    break
print(len(positive_list))

"""## Negative"""

negative_list=[]

count = 0
for i in range(10000):
  if (count % 10 == 0):
    print(count)
  count += 1
  x = random.randint(0, 19999)
  random_source = (list(train_sources))[x]
  random_sinks = train_dict[random_source]
  #remain_sinks = list(train_sinks-random_sinks)
  #print(len(random_sinks))
  #print(len(remain_sinks))
  #print(len(train_sinks))
  #print(remain_sinks[0:10])

  random_sink = random.choice(list(train_sinks))
  if random_sink not in random_sinks:
    negative_list.append((random_source, random_sink))
  
  if (len(negative_list)==10000):
    break
print(len(negative_list))

random_source = (list(train_sources))[1]
random_sinks = train_dict[random_source]
remain_sinks = list(train_sinks-random_sinks)
print(remain_sinks[0:20])

print(len(negative_list))

import numpy as np
np.save('positive_train.npy',np.array(positive_list))

np.save('negative_train.npy',np.array(negative_list))